一、从头开始
0、配置好openGL、python、scons和Visual Studio。
1、从Github下载Physika：https://github.com/FeiZhu/Physika。解压缩至项目根目录。
2、在根目录中命令行执行scons，会有很多warning，最终"done building targets"。
3、以文本文件打开Projects/TESTS/SConstruct文件，将第73行中的"MatrixMxN_test.cpp"改为自己写的主函数文件（同目录下），如demo.cpp。
4、修正代码中错误，已经在error_log.txt中列出。
5、在Projects/TESTS/中命令行执行scons，最终"done building targets"。
6、用Visual Studio打开根目录下Physika.sln解决方案文件。右键【解决方案'Physika'(6个项目)】，【添加】，【现有项目】，添加Projects/TESTS/PhysikaTestDebug.vcxproj项目文件。右键【PhysikaTestDebug】，【设为启动项目】。
7、每次更改除PhysikaTestDebug之外其它代码之后，都需要在根目录执行scons，然后再在Visual Studio中生成项目。

二、CCD相关
1、Physika_Dynamics/Collidable_Objects/中增加文件collision_pair_ccd，在碰撞对中存储碰撞点和法向，并且提供接口获取。
2、Physika_Geometry/Bounding_Volume/中增加文件object_bvh_ccd和object_bvh_ccd_node，用于让物体的包围盒覆盖增加物体这一帧和上一帧的位置。
3、Physika_Dynamics/Collidable_Objects/中修改文件collision_detection_method_CCD，此前的文件只是空框架，没有写连续碰撞检测的内容。
4、Physika_Dynamics/Collidable_Objects/中修改文件collision_pair_manager，增加两个函数，用于获取刚体的索引。
5、Physika_Dynamics/Collidable_Objects/中修改文件contact_point_manager.cpp，对于其中setCollisionResult函数，根据不同碰撞检测方法选择获取碰撞点和法向的方式。
6、Physika_Geometry/Bounding_Volume/中修改文件object_bvh.h和object_bvh_node.h，将其中buildFromMeshObject函数、elemTest函数和buildFromFace函数添加virtual变为虚函数。
7、在demo.cpp中包含头文件collision_detection_method_CCD.h，新建CollisionDetectionMethodCCD对象，然后设置driver的碰撞检测方法。

三、QCE相关
1、Physika_Dynamics/Rigid_Body/中增加文件rigid_driver_plugin_POV和rigid_response_method_QCE。
2、在demo.cpp中包含头文件rigid_response_method_QCE.h，然后新建RigidResponseMethodQCE对象，然后设置driver的碰撞反应方法。


